# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- none

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '5c7b01e2-8594-4c1d-afc1-2fc1aad4bd6e'
  imageRepository: 'manichukkapalliaimlmodels'
  containerRegistry: 'imagescr1.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/retail-sales-forecast/Dockerfile'
  tag: '$(Build.BuildId)'
  kubernetesServiceConnection: 'k8s-sc'
  azureSubscription: 'CR-AZURE-DevSecOps'
  azureResourceGroup: 'Drone-Land-Survey-DevOps'
  aksClusterName: 'MyManagedCluster'
  #aksNamespace: 'samplens'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build stage
  jobs:  
  - job: Build
    displayName: Build job
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)  
    - task: CopyFiles@2
      inputs:
        targetFolder: '$(Build.ArtifactStagingDirectory)'    
    - task: PublishBuildArtifacts@1    
      displayName: 'Publish Artifact: drop'
      inputs:
        PathtoPublish: '$(build.artifactstagingdirectory)'

- stage: Deploy
  displayName: Deploy stage
  jobs:
  - deployment:
    displayName: Deploy to AKS
    pool:
      vmImage: ubuntu-latest
    environment: 'myenv'
    strategy:
      runOnce:
        deploy:
          steps:
          - checkout: self

          - task: KubernetesManifest@0
            displayName: Deploy to Kubernetes cluster
            inputs:
              action: deploy
              kubernetesServiceConnection: '$(kubernetesServiceConnection)' #replace with your service connection
#             namespace: aksnamespace
              manifests: |
                '$(build.artifactstagingdirectory)/retail-sales-forecast/deployment.yml'
                '$(build.artifactstagingdirectory)/retail-sales-forecast/service.yml'
