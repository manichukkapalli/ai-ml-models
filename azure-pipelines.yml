# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- none

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '5c7b01e2-8594-4c1d-afc1-2fc1aad4bd6e'
  imageRepository: 'manichukkapalliaimlmodels'
  containerRegistry: 'imagescr1.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/retail-sales-forecast/Dockerfile'
  tag: '$(Build.BuildId)'
  azureSubscription: 'CR-AZURE-DevSecOps'
  azureResourceGroup: 'Drone-Land-Survey-DevOps'
  aksClusterName: 'samplecluster'
  aksNamespace: 'samplens'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build stage
  jobs:  
  - job: Build
    displayName: Build job
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)  
    - task: CopyFiles@2
      inputs:
        targetFolder: '$(Build.ArtifactStagingDirectory)'    
    - task: PublishBuildArtifacts@1    
      displayName: 'Publish Artifact: drop'
      inputs:
        PathtoPublish: '$(build.artifactstagingdirectory)'
    - task: SonarQubePrepare@5
      inputs:
          SonarQube: 'cr-kube-sonarqube'
          scannerMode: 'CLI'
          configMode: 'manual'
          cliProjectKey: 'sqa_e4e7998e77818dac2031d8d7808299046cd339fb'
          cliProjectName: 'retail-sales-forecast'
          cliSources: '.'
    - task: SonarQubeAnalyze@5
    - task: SonarQubePublish@5
      inputs:
        pollingTimeoutSec: '300'

